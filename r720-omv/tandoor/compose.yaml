services:
  tandoor:
    user: "1003:100"
    cap_add:
      - AUDIT_WRITE
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - FSETID
      - KILL
      - MKNOD
      - NET_BIND_SERVICE
      - NET_RAW
      - SETFCAP
      - SETGID
      - SETPCAP
      - SETUID
      - SYS_CHROOT
    cap_drop:
      - ALL
    container_name: tandoor
    entrypoint: ['/opt/recipes/boot.sh']
    environment:
      DB_ENGINE: "django.db.backends.postgresql"
      SECRET_KEY: "${TANDOOR_SECRET_KEY}"
      POSTGRES_HOST: "10.10.1.13"
      POSTGRES_PORT: "5432"
      POSTGRES_USER: "tandoor"
      POSTGRES_PASSWORD: "${TANDOOR_DB_PASSWORD}"
      POSTGRES_DB: "tandoor"
      ALLOWED_HOSTS: "recipes.${DOMAIN_NAME},127.0.0.1"
    hostname: tandoor
    image: vabene1111/recipes:latest
    ipc: private
    logging:
      driver: json-file
      options:
        max-size: 10m
        max-file: 3
    healthcheck:
      test: curl --fail http://localhost:8080/ || exit 1
      interval: 40s
      timeout: 30s
      retries: 3
      start_period: 60s
    networks:
      - tandoor
      - traefik
    ports:
      - 1244:8080/tcp
    labels:
      traefik.enable: "true"
      traefik.http.routers.tandoor.entrypoints: websecure
      traefik.http.routers.randoor.rule: Host('recipes.${DOMAIN_NAME}')
      traefik.http.routers.tandoor.tls: "true"
      traefik.http.routers.tandoor.tls.certresolver: letsencrypt
      traefik.http.services.tandoor.loadbalancer.server.port: "8080"
    restart: unless-stopped
    volumes:
      - /opt/docker/tandoor/tandoor_static:/opt/recipes/staticfiles
      - /opt/docker/tandoor/tandoor_media:/opt/recipes/mediafiles
    working_dir: /opt/recipes
networks:
  tandoor:
    external: false
    name: tandoor
    driver: bridge
  traefik:
    external: true
    