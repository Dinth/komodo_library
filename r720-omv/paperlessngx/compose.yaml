services:
  paperlessngx-postgres:
    container_name: paperlessngx-postgres
    ipc: private
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - SETUID
      - SETGID
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    image: docker.io/postgres:17.6-alpine
    restart: unless-stopped
    healthcheck:
      test: pg_isready -q -t 2 -d $$POSTGRES_DB -U $$POSTGRES_USER
      start_period: 20s
      timeout: 30s
      interval: 10s
      retries: 5
    environment:
      POSTGRES_DB: "paperlessngx"
      POSTGRES_PASSWORD: "${PAPERLESSNGX_POSTGRES_PASS}"
      POSTGRES_USER: "paperlessngx"
    labels:
      wud.watch: "true"
      wud.tag.include: '^17\.\d+-alpine$$'
      wud.link.template: 'https://github.com/postgres/postgres/releases/tag/REL_$${major}_$${minor}'
      wud.display.name: "Paperless-ngx - Postgres"
      wud.display.icon: "sh-paperlessngx"  
    deploy:
      resources:
        limits:
          memory: 200m
        reservations:
          memory: 50m
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - /opt/docker/paperlessngx/postgres-data:/var/lib/postgresql/data
    networks:
      - paperlessngx
  paperlessngx-valkey:
    container_name: paperlessngx-valkey
    image: docker.io/valkey/valkey:9.0.0-alpine
    command: ['valkey-server','--save','30','1','--loglevel','warning']
    restart: unless-stopped
    networks:
      - paperlessngx
    volumes:
      - /opt/docker/paperlessngx/valkey-data:/data
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
      - CHOWN
    cap_drop:
      - ALL
    labels:
      wud.display.name: "Paperless-ngx - Valkey"
      wud.display.icon: "sh-paperless-ngx"
      wud.watch: "true"
      wud.tag.include: '^v\d+\.\d+\.\d+\-alipne$$'
      wud.link.template: 'https://github.com/valkey-io/valkey/releases/tag/$${major}.$${minor}.$${patch}'
    healthcheck: 
      test: '[ $$(valkey-cli ping) = ''PONG'' ]'
      start_period: 5s
      timeout: 3s
      interval: 1s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
  paperlessngx:
    image: ghcr.io/paperless-ngx/paperless-ngx:2.19.2
    restart: unless-stopped
    ipc: private
    depends_on:
      paperlessngx-valkey:
        condition: service_healthy
      paperlessngx-postgres:
        condition: service_healthy
    ports:
      - "8583:8000"
    volumes:
      - /opt/docker/paperlessngx/paperlessngx_data:/usr/src/paperless/data
      - /opt/docker/paperlessngx/paperlessngx_media:/usr/src/paperless/media
      - /opt/docker/paperlessngx/paperlessngx_export:/usr/src/paperless/export
      - /opt/docker/paperlessngx/paperlessngx_consume:/usr/src/paperless/consume
    environment:
      PAPERLESS_REDIS: "redis://paperlessngx-valkey:6379"
      PAPERLESS_DBHOST: "paperlessngx-postgres"
      PAPERLESS_DBNAME: "paperlessngx"
      PAPERLESS_DBUSER: "paperlessngx"
      PAPERLESS_DBPASS: "${PAPERLESSNGX_POSTGRES_PASS}"
      PAPERLESS_TIME_ZONE: "${TZ}"
      PAPERLESS_OCR_LANGUAGES: "pol"
      PAPERLESS_OCR_LANGUAGE: "eng+pol"
      PAPERLESS_CSRF_TRUSTED_ORIGINS: "https://papers.${DOMAIN_NAME}"
      PAPERLESS_ALLOWED_HOSTS: "papers.${DOMAIN_NAME},10.10.1.13"
      PAPERLESS_CORS_ALLOWED_HOSTS: "https://papers.${DOMAIN_NAME},http://10.10.1.13:8583"
      PAPERLESS_SECRET_KEY: "${PAPERLESSNGX_SECRET_KEY}"
    networks:
      - paperlessngx
      - traefik
    labels:
      traefik.enable: "true"
      traefik.http.routers.paperlessngx.rule: "Host(`papers.${DOMAIN_NAME}`)"
      traefik.http.routers.paperlessngx.entrypoints: "websecure"
      traefik.http.routers.paperlessngx.tls: "true"
      traefik.http.routers.paperlessngx.tls.certresolver: "letsencrypt"
      traefik.http.routers.paperlessngx.tls.domains[0].main: "${DOMAIN_NAME}"
      traefik.http.routers.paperlessngx.tls.domains[0].sans: "*.${DOMAIN_NAME}"
      traefik.http.routers.paperlessngx.middlewares: "secHeaders@file"
      traefik.http.services.paperlessngx.loadbalancer.server.port: "8000"
      homepage.group: "Media"
      homepage.name: "Paperless-ngx"
      homepage.icon: "paperlessngx.png"
      homepage.href: "https://papers.${DOMAIN_NAME}"
      homepage.description: "E-book catalogue"
      wud.watch: "true"
      wud.tag.include: '^v?\d+\.\d+\.\d+$$'
      wud.display.name: "Paperless-ngx"
      wud.display.icon: "sh:paperless-ngx"
      wud.link.template: "https://github.com/paperless-ngx/paperless-ngx/releases/tag/v$${major}.$${minor}.$${patch}"
networks:
  paperlessngx:
    name: paperlessngx-web
    driver: bridge
    external: false
  traefik:
    external: true