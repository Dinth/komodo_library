services:
  romm-mariadb:
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
      - FOWNER
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges=true
    container_name: romm-mariadb
    environment:
      MYSQL_DIR: "/config"
      DATADIR: "/config/databases"
      MYSQL_ROOT_PASSWORD: "${ROMM_DB_PASS}"
      MYSQL_DATABASE: "romm"
      MYSQL_USER: "romm"
      MYSQL_PASSWORD: "${ROMM_DB_PASS}"
      PUID: "${DOCKER_PUID}"
      PGID: "${DOCKER_PGID}"
      TZ: "${TZ}"
    hostname: romm-mariadb
    image: linuxserver/mariadb:11.4.8
    ipc: private
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1g
        reservations:
          memory: 512m
    networks:
      - romm
      - adminer
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u\"$${MYSQL_USER}\" -p\"$${MYSQL_PASSWORD}\" --protocol=tcp || exit 1"]
      start_period: 60s
      interval: 30s
      timeout: 5s
      retries: 5
    labels:
      wud.display.name: "Romm - MariaDB"
      wud.display.icon: "sh-romm"
      wud.watch: "true"
      wud.tag.include: '^v\d+\.\d+\.\d+$$'
      wud.link.template: 'https://github.com/MariaDB/server/releases/tag/mariadb-$${major}.$${minor}.$${patch}'
    volumes:
      - /opt/docker/romm/mariadb_data:/config
  romm-valkey:
    container_name: romm-valkey
    image: docker.io/valkey/valkey:8.1.3-alpine
    ipc: private
    command: ['valkey-server','--save','30','1','--loglevel','warning']
    restart: unless-stopped
    networks:
      - romm
    volumes:
      - /opt/docker/romm/valkey-data:/data
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
      - CHOWN
    cap_drop:
      - ALL
    labels:
      wud.display.name: "Romm - Valkey"
      wud.display.icon: "sh-romm"
      wud.watch: "true"
      wud.tag.include: '^v\d+\.\d+\.\d+$$'
      wud.link.template: 'https://github.com/valkey-io/valkey/releases/tag/$${major}.$${minor}.$${patch}'
    healthcheck: 
      test: '[ $$(valkey-cli ping) = ''PONG'' ]'
      start_period: 5s
      timeout: 3s
      interval: 1s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
  romm:
    cap_add:
      - AUDIT_WRITE
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - FSETID
      - KILL
      - MKNOD
      - NET_BIND_SERVICE
      - NET_RAW
      - SETFCAP
      - SETGID
      - SETPCAP
      - SETUID
      - SYS_CHROOT
    cap_drop:
      - ALL
    command:
      - /init
    container_name: romm
    entrypoint:
      - /docker-entrypoint.sh
    environment:
      DB_HOST: "romm-mariadb"
      DB_NAME: "romm"
      DB_USER: "romm"
      DB_PASSWD: "${ROMM_DB_PASS}"
      ROMM_AUTH_SECRET_KEY: "${ROMM_AUTH_SECRET_KEY}"
      IGDB_CLIENT_ID: "${IGDB_CLIENT_ID}"
      IGDB_CLIENT_SECRET: "${IGDB_CLIENT_SECRET}"
      RETROACHIEVEMENTS_API_KEY: "${ROMM_RETROARCHIEVEMENTS_API_KEY}"
      REDIS_HOST: "romm-valkey"
      SCREENSCRAPER_USER: "dinth"
      SCREENSCRAPER_PASSWORD: "${ROMM_SCREENSCRAPER_PASS}"
      ENABLE_SCHEDULED_RETROACHIEVEMENTS_PROGRESS_SYNC: "true"
      ENABLE_SCHEDULED_CONVERT_IMAGES_TO_WEBP: "true"
      ENABLE_RESCAN_ON_FILESYSTEM_CHANGE: "true"
      RESCAN_ON_FILESYSTEM_CHANGE_DELAY: "5"
      TZ: "${TZ}"
    hostname: romm
    image: rommapp/romm:4.2.0
    ipc: private
    healthcheck:
      test: curl -ILfSs http://localhost:8080/  || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - romm
      - traefik
    labels:  
      traefik.enable: "true"
      traefik.http.routers.romm.rule: "Host(`emu.${DOMAIN_NAME}`)"
      traefik.http.routers.romm.entrypoints: "websecure"
      traefik.http.routers.romm.tls: "true"
      traefik.http.routers.romm.tls.certresolver: "letsencrypt"
      traefik.http.routers.romm.tls.domains[0].main: "${DOMAIN_NAME}"
      traefik.http.routers.romm.tls.domains[0].sans: "*.${DOMAIN_NAME}"
      traefik.http.routers.romm.middlewares: "secHeaders@file"
      traefik.http.services.romm.loadbalancer.server.port: "8080"
      homepage.group: "Media"
      homepage.name: "Romm"
      homepage.icon: "romm"
      homepage.href: "https://emu.${DOMAIN_NAME}"
      homepage.siteMonitor: "https://emu.${DOMAIN_NAME}"
      homepage.widget.type: "romm"
      homepage.widget.url: "https://emu.${DOMAIN_NAME}"
      homepage.widget.username: "michal"
      homepage.widget.password: "{{HOMEPAGE_ROMM_PASS}}"
      wud.watch: 'true'
      wud.watch.digest: "true"
      wud.display.icon: 'sh-romm'
      wud.display.name: 'Romm'
      wud.tag.include: '^\d+\.\d+\.\d+$$'
      wud.link.template: 'https://github.com/rommapp/romm/releases/tag/$${major}.$${minor}.$${patch}'
    depends_on:
      romm-valkey:
        condition: service_healthy
      romm-mariadb:
        condition: service_healthy
    ports:
      - 4040:8080/tcp
    restart: unless-stopped
    volumes:
      - /opt/docker/romm/romm_assets:/romm/assets
      - /opt/docker/romm/romm_config:/romm/config
      - /Data/ROMs:/romm/library
      - /opt/docker/romm/romm_resources:/romm/resources
    working_dir: /romm
networks:
  romm:
    name: romm
    driver: bridge
  traefik:
    external: true
  adminer:
    external: true