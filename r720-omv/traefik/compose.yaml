services:
  traefik-socket-proxy:
    image: wollomatic/socket-proxy:1.9.0
    ipc: private
    command:
      - '-loglevel=info'
      - '-allowfrom=traefik' # allow only the dozzle container
      - '-listenip=0.0.0.0'
      - '-allowGET=/v1\..{1,2}/(version|containers/.*|events.*)'
      - '-allowHEAD=/_ping'
      - '-watchdoginterval=1200'
      - '-stoponwatchdog'
      - '-shutdowngracetime=10'
    restart: unless-stopped
    read_only: true
    mem_limit: 64M
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges
    user: "65534:${DOCKER_SOCKET_GID}"
    labels:
      wud.watch: "true"
      wud.tag.include: '^\d+\.\d+\.\d+$$'
      wud.link.template: "https://github.com/wollomatic/socket-proxy/releases/tag/$${major}.$${minor}.$${patch}"
      wud.display.name: 'Docker Socket Proxy - Traefik'
      wud.display.icon: 'mdi:connection'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik

  traefik:
    image: traefik:v3.5.3
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
# --- API, Dashboard & Logging ---
      TRAEFIK_API_DASHBOARD: "true"
      TRAEFIK_API_INSECURE: "true" # Be careful with this in production!
      TRAEFIK_API_DEBUG: "false"
      TRAEFIK_LOG_LEVEL: "DEBUG"
      TZ: "${TZ}"
  # --- EntryPoints Configuration ---
    # Web (HTTP) EntryPoint on port 80 with a global redirect to websecure
      TRAEFIK_ENTRYPOINTS_WEB_ADDRESS: ":80"
      TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_TO: "websecure"
      TRAEFIK_ENTRYPOINTS_WEB_HTTP_REDIRECTIONS_ENTRYPOINT_SCHEME: "https"
    # Websecure (HTTPS) EntryPoint on port 443
      TRAEFIK_ENTRYPOINTS_WEBSECURE_ADDRESS: ":443"
      TRAEFIK_ENTRYPOINTS_WEBSECURE_HTTP_TLS_CERTRESOLVER: "letsencrypt"
      TRAEFIK_ENTRYPOINTS_WEBSECURE_TRANSPORT_RESPONDINGTIMEOUTS_READTIMEOUT: "600s"
      TRAEFIK_ENTRYPOINTS_WEBSECURE_TRANSPORT_RESPONDINGTIMEOUTS_IDLETIMEOUT: "600s"
      TRAEFIK_ENTRYPOINTS_WEBSECURE_TRANSPORT_RESPONDINGTIMEOUTS_WRITETIMEOUT: "600s"
  # --- Backend Server Transport ---
      TRAEFIK_SERVERSTRANSPORT_INSECURESKIPVERIFY: "true"
  # --- Providers Configuration ---
    # Docker Provider
      TRAEFIK_PROVIDERS_DOCKER: "true"
      TRAEFIK_PROVIDERS_DOCKER_ENDPOINT: "tcp://traefik-socket-proxy:2375"
      TRAEFIK_PROVIDERS_DOCKER_EXPOSEDBYDEFAULT: "false"
      TRAEFIK_PROVIDERS_DOCKER_NETWORK: "traefik"
    # File Provider
      TRAEFIK_PROVIDERS_FILE_FILENAME: "/traefik_dynamic.yml"
      TRAEFIK_PROVIDERS_FILE_WATCH: "true"    
  # --- Certificate Resolver (Let's Encrypt with Cloudflare DNS Challenge) ---
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_EMAIL: "${ADMIN_EMAIL}"
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_STORAGE: "/certs/acme.json"
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_CASERVER: "https://acme-v02.api.letsencrypt.org/directory"
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE_PROVIDER: "cloudflare"
      TRAEFIK_CERTIFICATESRESOLVERS_LETSENCRYPT_ACME_DNSCHALLENGE_DELAYBEFORECHECK: "10"
      
      CF_API_EMAIL: "${ADMIN_EMAIL}"
      CF_DNS_API_TOKEN: "${TRAEFIK_CF_DNS_API_TOKEN}"
      LOCAL_IPS: "127.0.0.1/32,10.0.0.0/8,192.168.0.0/16,172.16.0.0/12"
      CLOUDFLARE_IPS: "173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22"
    labels:
  # --- Middlewares ---
    # Middleware: Security Headers (secHeaders)
      traefik.http.middlewares.securityHeaders.headers.browserXssFilter: "true"
      traefik.http.middlewares.securityHeaders.headers.contentTypeNosniff: "true"
      traefik.http.middlewares.securityHeaders.headers.forceSTSHeader: "true"
      traefik.http.middlewares.securityHeaders.headers.stsIncludeSubdomains: "true"
      traefik.http.middlewares.securityHeaders.headers.stsPreload: "true"
      traefik.http.middlewares.securityHeaders.headers.stsSeconds: "31536000"
      traefik.http.middlewares.securityHeaders.headers.customFrameOptionsValue: "SAMEORIGIN"
      traefik.http.middlewares.securityHeaders.headers.customResponseHeaders.Content-Security-Policy: 'default-src ''self''; media-src ''self'' blob:; script-src ''self'' ''unsafe-inline'' ''unsafe-eval''; style-src ''self'' ''unsafe-inline''; img-src ''self'' data: cdn.jsdelivr.net; font-src ''self'' data:; object-src ''none''; frame-ancestors ''self''; connect-src ''self'';'
      traefik.http.middlewares.securityHeaders.headers.customResponseHeaders.Referrer-Policy: 'strict-origin-when-cross-origin'
      traefik.http.middlewares.securityHeaders.headers.customResponseHeaders.Permissions-Policy: 'microphone=(), geolocation=(), payment=(), usb=(), vr=(), camera=(), display-capture=(), accelerometer=(), gyroscope=(), magnetometer=(), midi=(), xr-spatial-tracking=(), screen-wake-lock=()'
      traefik.http.middlewares.securityHeaders.headers.customResponseHeaders.X-Robots-Tag: 'noindex, nofollow, noarchive, nosnippet'
      traefik.http.middlewares.securityHeaders.headers.customResponseHeaders.X-Frame-Options: 'SAMEORIGIN'
    # Middleware: HTTPS Redirect (https-redirect)
      traefik.http.middlewares.https-redirect.redirectscheme.scheme: "websecure"
  # --- Routers ---
    # Router: homeassistant (HTTPS)
      traefik.http.routers.homeassistant.rule: "Host(`home.wickhay.uk`)"
      traefik.http.routers.homeassistant.entrypoints: "websecure"
      traefik.http.routers.homeassistant.service: "homeassistant"
      traefik.http.routers.homeassistant.tls.certresolver: "letsencrypt"
      traefik.http.routers.homeassistant.middlewares: "secHeaders"
    # Router: homeassistant-http (HTTP to HTTPS Redirect)
      traefik.http.routers.homeassistant-http.rule: "Host(`home.wickhay.uk`)"
      traefik.http.routers.homeassistant-http.entrypoints: "web"
      traefik.http.routers.homeassistant-http.service: "homeassistant"
      traefik.http.routers.homeassistant-http.middlewares: "https-redirect"

  # --- External services ---
    # Service: Home Assistant
      traefik.http.services.homeassistant.loadbalancer.servers.0.url: "http://10.10.1.11:8123"

      homepage.group: "Infrastructure"
      homepage.name: "Traefik"
      homepage.icon: "traefik"
      homepage.internal.href: "http://10.10.1.13:8281"
      homepage.description: "HTTP reverse proxy"
      homepage.statusStyle: "dot"
      homepage.widget.type: "traefik"
      homepage.widget.url: "http://10.10.1.13:8281"
      homepage.widget.fields: "['routers', 'services', 'middleware']"
#      - "homepage.widget.username:username"
#      - "homepage.widget.password:password"
      wud.watch: "true"
      wud.watch.digest: "true"
      wud.display.name: "Traefik"
      wud.display.icon: "sh:traefik"
      wud.tag.include: '^v\d+\.\d+\.\d+$$'
      wud.link.template: 'https://github.com/traefik/traefik/releases/tag/v$${major}\.$${minor}\.$${patch}'
    depends_on:
      - traefik-socket-proxy
    networks:
      - traefik-internal
      - traefik
    ports:
      - 80:80
      - 443:443 
      - 8281:8080 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/docker/traefik/traefik_certs:/certs
#      - /opt/docker/traefik/traefik.yml:/traefik.yml:ro
      - /opt/docker/traefik/traefik_dynamic.yml:/traefik_dynamic.yml:ro
      - /opt/docker/traefik/mojecertpl.verification:/mojecertpl.verification:ro
networks:
  traefik:
    name: traefik
    driver: bridge
    external: false
    ipam:
      config:
        - subnet: 10.55.0.0/16
          ip_range: 10.55.0.0/24
  traefik-internal:
    name: traefik-internal
    driver: bridge
    internal: true