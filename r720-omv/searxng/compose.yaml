services:
  searxng-valkey:
    container_name: searxng-valkey
    image: docker.io/valkey/valkey:8-alpine
    command: ['valkey-server','--save','30','1','--loglevel','warning']
    restart: unless-stopped
    networks:
      - searxng
    volumes:
      - /opt/docker/searxng/valkey-data:/data
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    cap_drop:
      - ALL
    healthcheck: 
      test: '[ $$(valkey-cli ping) = ''PONG'' ]'
      start_period: 5s
      timeout: 3s
      interval: 1s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  searxng:
    container_name: searxng
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    networks:
      - searxng
      - traefik
    ports:
      - "9234:8080"
    volumes:
      - /opt/docker/searxng/searxng:/etc/searxng:rw
    depends_on:
      searxng-valkey:
        condition: service_healthy
    environment:
      SEARXNG_HOSTNAME: "https://search.${DOMAIN_NAME}/"
      SEARXNG_BASE_URL: "https://search.${DOMAIN_NAME}/"
      UWSGI_WORKERS: "${SEARXNG_UWSGI_WORKERS:-4}"
      UWSGI_THREADS: "${SEARXNG_UWSGI_THREADS:-4}"
#    cap_drop:
#      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    labels:  
      - "traefik.enable=true"
      - "traefik.http.routers.searxng.rule=Host(`search.${DOMAIN_NAME}`)"
      - "traefik.http.routers.searxng.entrypoints=websecure"
      - "traefik.http.routers.searxng.tls=true"
      - "traefik.http.routers.searxng.tls.certresolver=letsencrypt"
      - "traefik.http.services.searxng.loadbalancer.server.port=8080"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

networks:
  searxng:
    name: searxng
    driver: bridge
    external: false
  traefik:
    external: true