services:
  freshrss-rssbridge:
    image: rssbridge/rss-bridge:latest
    ipc: private
    restart: unless-stopped
    volumes:
      - /opt/docker/freshrss/freshrss-rssbridge_config:/config
    entrypoint: ["sh", "-c", "/app/bin/cache-clear && exec /app/docker-entrypoint.sh"]
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "bash -c 'echo > /dev/tcp/localhost/80 && echo HTTP OK || echo HTTP FAIL'"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - freshrss
    ports: 
      - "4746:80"
  freshrss-postgres:
    image: docker.io/postgres:17.6-alpine
    ipc: private
    cap_add:
      - AUDIT_WRITE
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - FSETID
      - KILL
      - MKNOD
      - NET_BIND_SERVICE
      - NET_RAW
      - SETFCAP
      - SETGID
      - SETPCAP
      - SETUID
      - SYS_CHROOT
    cap_drop:
      - ALL
    restart: unless-stopped
    healthcheck:
      test: pg_isready -q -t 2 -d $$POSTGRES_DB -U $$POSTGRES_USER
      start_period: 20s
      timeout: 30s
      interval: 10s
      retries: 5
    environment:
      POSTGRES_DB: "freshrss"
      POSTGRES_PASSWORD: "${FRESHRSS_POSTGRES_PASS}"
      POSTGRES_USER: "freshrss"
    labels:
      wud.watch: "true"
      wud.tag.include: '^v?\d+\.\d+$$'
      wud.link.template: 'https://github.com/postgres/postgres/releases/tag/REL_$${major}_$${minor}'
      wud.display.name: "FreshRSS - Postgres"
      wud.display.icon: "sh-freshrss"  
    deploy:
      resources:
        limits:
          memory: 200m
        reservations:
          memory: 50m
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - /opt/docker/freshrss/freshrss_postgres-data:/var/lib/postgresql/data
    networks:
      - freshrss
  freshrss:
    image: freshrss/freshrss:1.27.0
    container_name: freshrss
    restart: unless-stopped
    ipc: private
    environment: 
      TRUSTED_PROXIES: "traefik"
      TZ: "${TZ}"
      BASE_URL: "https://rss.${DOMAIN_NAME}"
      CRON_MIN: "*/10"
      ADMIN_EMAIL : "ddd@ddd.pl"
      ADMIN_PASSWORD: "freshrss"
      ADMIN_API_PASSWORD: "freshrss"
      DB_TYPE: "pgsql"
      DB_HOST: ""
      DB_USER: "freshrss"
      DB_BASE: "freshrss"
      DB_PASS: "${FRESHRSS_POSTGRES_PASS}"
      FRESHRSS_INSTALL: |-
        --api-enabled
        --base-url https://rss.${DOMAIN_NAME}
        --db-base freshrss
        --db-host freshrss-postgres
        --db-password ${FRESHRSS_POSTGRES_PASS}
        --db-type pgsql
        --db-user freshrss
        --default-user admin
        --language en
      FRESHRSS_USER: |-
        --api-password ${FRESHRSS_ADMIN_API_PASS}
        --email ${ADMIN_EMAIL}
        --language en
        --password ${FRESHRSS_ADMIN_PASS}
        --user admin
    labels:
      traefik.enable: "true"
      traefik.http.routers.freshrss.rule: "Host(`rss.${DOMAIN_NAME}`)"
      traefik.http.routers.freshrss.entrypoints: "websecure"
      traefik.http.routers.freshrss.tls: "true"
      traefik.http.routers.freshrss.tls.certresolver: "letsencrypt"
      traefik.http.routers.freshrss.tls.domains[0].main: "${DOMAIN_NAME}"
      traefik.http.routers.freshrss.tls.domains[0].sans: "*.${DOMAIN_NAME}"
      traefik.http.routers.freshrss.middlewares: "secHeaders@file"
      traefik.http.services.freshrss.loadbalancer.server.port: "80"
      homepage.group: "Home"
      homepage.name: "FreshRSS"
      homepage.icon: "sh-freshrss.png"
      homepage.href: "https://rss.${DOMAIN_NAME}"
      homepage.description: "RSS news reader and aggregator"
      wud.watch: "true"
      wud.tag.include: '^\d+\.\d+\.\d+$$'
      wud.display.name: "FreshRSS"
      wud.display.icon: "sh:freshrss"
      wud.link.template: "https://github.com/FreshRSS/FreshRSS/releases/$${major}.$${minor}.$${patch}"
    depends_on:
      freshrss-postgres:
        condition: service_healthy
    ports:
      - "8020:80"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /opt/docker/freshrss/freshrss_data:/var/www/FreshRSS/data
      - /opt/docker/freshrss/freshrss_extensions:/var/www/FreshRSS/extensions
    networks:
      - freshrss
      - traefik
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        
networks:
  freshrss:
    name: freshrss
    driver: bridge
  traefik:
    name: traefik
    external: true    