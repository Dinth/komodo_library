services:
  n8n:
    user: ${DOCKER_PUID}:${DOCKER_PGID}
    cap_drop:
      - ALL
    cap_add:
      - AUDIT_WRITE
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - FSETID
      - KILL
      - MKNOD
      - NET_BIND_SERVICE
      - NET_RAW
      - SETFCAP
      - SETGID
      - SETPCAP
      - SETUID
      - SYS_CHROOT
      - DAC_OVERRIDE
    container_name: n8n
#    entrypoint: ['tini','--','/docker-entrypoint.sh']
    environment:
      DB_TYPE: "postgresdb"
      DB_POSTGRESDB_DATABASE: "n8n"
      DB_POSTGRESDB_HOST: "10.10.1.13"
      DB_POSTGRESDB_PORT: "5432"
      DB_POSTGRESDB_USER: "n8n"
      DB_POSTGRESDB_PASSWORD: "${N8N_DB_PASS}"
      TZ: "${TZ}"
      N8N_DIAGNOSTICS_ENABLED: "false"
      N8N_VERSION_NOTIFICATIONS_ENABLED: "false"
      DEBUG: "true"
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "true"
    hostname: n8n
    image: docker.n8n.io/n8nio/n8n:1.117.1
    ipc: private
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3" 
    labels:
      traefik.enable: "true"
      traefik.http.routers.n8n.rule: "Host(`auto.${DOMAIN_NAME}`)"
      traefik.http.routers.n8n.entrypoints: "websecure"
      traefik.http.routers.n8n.tls: "true"
      traefik.http.routers.n8n.tls.certresolver: "letsencrypt"
      traefik.http.routers.n8n.tls.domains[0].main: "${DOMAIN_NAME}"
      traefik.http.routers.n8n.tls.domains[0].sans: "*.${DOMAIN_NAME}"
      traefik.http.routers.n8n.middlewares: "secHeaders@file"
      traefik.http.services.n8n.loadbalancer.server.port: "80"
      wud.watch: "true"
      wud.tag.include: '^\d+\.\d+\.\d+$$'
      wud.display.name: "n8n"
      wud.display.icon: "sh:n8n"
      wud.link.template: "https://github.com/n8n-io/n8n/releases/tag/n8n%40$${major}.$${minor}.$${patch}"
    healthcheck:
      test: wget --spider http://127.0.0.1:5678/healthz > /dev/null 2>&1 || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1m
      start_interval: 2s
    networks:
      - n8n
    ports:
      - 5678:5678/tcp
    restart: unless-stopped
    volumes:
      - /opt/docker/n8n/n8n_data:/home/node/.n8n
networks:
  n8n:
    name: n8n
    driver: bridge
    external: false