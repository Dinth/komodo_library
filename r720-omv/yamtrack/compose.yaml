services:
  yamtrack:
    container_name: yamtrack
    cap_add:
      - AUDIT_WRITE
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - FSETID
      - KILL
      - MKNOD
      - NET_BIND_SERVICE
      - NET_RAW
      - SETFCAP
      - SETGID
      - SETPCAP
      - SETUID
      - SYS_CHROOT
    cap_drop:
      - ALL
    ipc: private
    security_opt:
      - no-new-privileges=true
    image: ghcr.io/fuzzygrim/yamtrack:0.24.7
    restart: unless-stopped
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    depends_on:
      yamtrack-valkey:
        condition: service_healthy
      yamtrack-postgres:
        condition: service_healthy
    environment:
      TZ: "${TZ}"
      SECRET: "${YAMTRACK_SECRET}"
      REDIS_URL: "redis://yamtrack-valkey:6379"
      DB_HOST: "yamtrack-postgres"
      DB_NAME: "yamtrack"
      DB_USER: "yamtrack"
      DB_PASSWORD: "${YAMTRACK_DB_PASS}"
      DB_PORT: "5432"
      URLS: "http://10.10.1.13:5743, https://mediatracker.${DOMAIN_NAME}"
      WEB_CONCURRENCY: "5"
      TMDB_NSFW: "true"
      MAL_NSFW: "true"
      IGDB_NSFW: "true"
      #MAL_API: "${MYANIMELIST_SECRET}"
    labels:
      traefik.enable: "true"
      traefik.http.routers.yamtrack.rule: "Host(`mediatracker.${DOMAIN_NAME}`)"
      traefik.http.routers.yamtrack.entrypoints: "websecure"
      traefik.http.routers.yamtrack.tls: "true"
      traefik.http.routers.yamtrack.tls.certresolver: "letsencrypt"
      traefik.http.routers.yamtrack.tls.domains[0].main: "${DOMAIN_NAME}"
      traefik.http.routers.yamtrack.tls.domains[0].sans: "*.${DOMAIN_NAME}"
      traefik.http.routers.yamtrack.middlewares: "secHeaders@file"
      traefik.http.services.yamtrack.loadbalancer.server.port: "80"
      homepage.group: "Media"
      homepage.name: "Yamtrack"
      homepage.icon: "yamtrack.png"
      homepage.href: "https://mediatracker.${DOMAIN_NAME}"
      homepage.description: "Media tracker"
      homepage.siteMonitor: "https://mediatracker.${DOMAIN_NAME}"
      wud.watch: "true"
      wud.tag.include: '^v?\d+\.\d+\.\d+$$'
      wud.display.name: "Yamtrack"
      wud.display.icon: "sh:yamtrack"
      wud.link.template: "https://github.com/FuzzyGrim/Yamtrack/releases/tag/v$${major}.$${minor}.$${patch}"
    ports:
      - "5743:8000"
    networks:
      - yamtrack
      - traefik

  yamtrack-postgres:
    image: postgres:16.10-alpine
    container_name: yamtrack-postgres
    ipc: private
    cap_add:
      - CHOWN
      - FOWNER
      - DAC_OVERRIDE
      - SETUID
      - SETGID
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: pg_isready -q -t 2 -d $$POSTGRES_DB -U $$POSTGRES_USER
      start_period: 20s
      timeout: 30s
      interval: 10s
      retries: 5
    labels:
      wud.watch: "true"
      wud.tag.include: '^16\.\d+-alpine$$'
      wud.link.template: 'https://github.com/postgres/postgres/releases/tag/REL_$${major}_$${minor}'
      wud.display.name: "Yamtrack - Postgres"
      wud.display.icon: "sh-yamtrack"  
    deploy:
      resources:
        limits:
          memory: 200m
        reservations:
          memory: 50m
    environment:
      POSTGRES_DB: "yamtrack"
      POSTGRES_USER: "yamtrack"
      POSTGRES_PASSWORD: "${YAMTRACK_DB_PASS}"
    volumes:
      - /opt/docker/yamtrack/yamtrack-postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - yamtrack

  yamtrack-valkey:
    container_name: yamtrack-valkey
    image: docker.io/valkey/valkey:8.1.3-alpine
    ipc: private
    command: ['valkey-server','--save','30','1','--loglevel','warning']
    restart: unless-stopped
    networks:
      - yamtrack
    volumes:
      - /opt/docker/yamtrack/valkey-data:/data
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE
      - CHOWN
    cap_drop:
      - ALL
    labels:
      wud.display.name: "Yamtrack - Valkey"
      wud.display.icon: "sh-searxng"
      wud.watch: "true"
      wud.tag.include: '^v\d+\.\d+\.\d+$$'
      wud.link.template: 'https://github.com/valkey-io/valkey/releases/tag/$${major}.$${minor}.$${patch}'
    healthcheck: 
      test: '[ $$(valkey-cli ping) = ''PONG'' ]'
      start_period: 5s
      timeout: 3s
      interval: 1s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

networks:
  yamtrack:
    external: false
    name: yamtrack
    driver: bridge
  traefik:
    external: true