services:

  neolink:
    command: ['/usr/local/bin/neolink','rtsp','--config','/etc/neolink.toml']
    container_name: neolink
    environment:
      NEO_LINK_MODE: "mqtt-rtsp"
      NEO_LINK_PORT: "8554"
      RUST_LOG: "debug"
    hostname: neolink
    image: quantumentangledandy/neolink:v0.5.9
    ipc: private
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - frigate
    ports:
      - 8654:8554/tcp
    restart: unless-stopped
    volumes:
      - /opt/docker/frigate/neolink_valgrind:/valgrind
      - /opt/docker/frigate/neolink.toml:/etc/neolink.toml
  frigate:
    cap_add:
      - AUDIT_WRITE
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - FSETID
      - KILL
      - MKNOD
      - NET_BIND_SERVICE
      - NET_RAW
      - SETFCAP
      - SETGID
      - SETPCAP
      - SETUID
      - SYS_CHROOT
    cap_drop:
      - ALL
    container_name: frigate
    entrypoint: ['/init']
    environment:
      PLUS_API_KEY: "${FRIGATE_PLUS_API_KEY}"
      YOLO_MODELS: "yolov7-640"
      USE_FP16: "false"
      NVIDIA_VISIBLE_DEVICES: "all"
      NVIDIA_DRIVER_CAPABILITIES: "compute,video,utility"
      TOKENIZERS_PARALLELISM: "true"
      TRANSFORMERS_NO_ADVISORY_WARNINGS: "1"
      OPENCV_FFMPEG_LOGLEVEL: "8"
    hostname: frigate
    image: ghcr.io/blakeblackshear/frigate:stable-tensorrt
    devices:
      - /dev/bus/usb:/dev/bus/usb
    ipc: private
    runtime: nvidia
    shm_size: "4gb"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [compute,utility,video]
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - frigate
      - traefik
    ports:
      - 5000:5000/tcp
      - 8554:8554/tcp
      - 8555:8555/tcp
      - 8555:8555/udp
      - 8971:8971/tcp
    privileged: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.frigate.entrypoints: websecure
      traefik.http.routers.frigate.rule: Host(`cctv.${DOMAIN_NAME}`)
      traefik.http.routers.frigate.tls: "true"
      traefik.http.routers.frigate.tls.certresolver: letsencrypt
      traefik.http.services.frigate.loadbalancer.server.port: "5000"
      homepage.group: "Home"
      homepage.name: "Frigate"
      homepage.icon: "frigate.png"
      homepage.instance.internal.href: "http://10.10.1.13:5000"
      homepage.instance.public.href: "https://cctv.${DOMAIN_NAME}"
      homepage.description: "CCTV NVR"
      homepage.widget.type: "frigate"
      homepage.widget.url: "http://10.10.1.13"
#      homepage.widget.enableRecentEvents: "true"
    restart: unless-stopped
    security_opt:
      - label=disable
    volumes:
      - /srv/dev-disk-by-uuid-8973b1f7-8374-499e-8876-a26e9ed39e41/CCTV/clips:/media/frigate/clips
      - /srv/dev-disk-by-uuid-8973b1f7-8374-499e-8876-a26e9ed39e41/CCTV:/media/frigate/recordings
      - /root/download_yolo.sh:/usr/local/src/tensorrt_demos/yolo/download_yolo.sh
      - /dev/bus/usb:/dev/bus/usb
      - /etc/localtime:/etc/localtime:ro
      - /opt/docker/frigate/frigate_config:/config
      - /opt/docker/frigate/frigate_storage:/media/frigate
    working_dir: /opt/frigate
networks:
  frigate:
    name: frigate
    driver: bridge
    external: false
  traefik:
    external: true