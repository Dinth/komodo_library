services:
  bricktracker:
    user: "${DOCKER_PUID}:${DOCKER_PGID}"
    cap_drop:
      - ALL
    container_name: bricktracker
    restart: unless-stopped
    image: gitea.baerentsen.space/frederikbaerentsen/bricktracker:v1.2.0
    ports:
      - "3333:3333"
    volumes:
      - /opt/docker/bricktracker/bricktracker_data:/data/
      - /opt/docker/bricktracker/bricktracker_instructions:/app/static/instructions/
      - /opt/docker/bricktracker/bricktracker_minifigures:/app/static/minifigures/
      - /opt/docker/bricktracker/bricktracker_parts:/app/static/parts/
      - /opt/docker/bricktracker/bricktracker_sets:/app/static/sets/
    environment:
      BK_DATABASE_PATH: "/data/app.db"
      BK_MINIFIGURES_FOLDER: "minifigures"
      BK_RETIRED_SETS_PATH: "/data/retired_sets.csv"
      BK_THEMES_PATH: "/data/themes.csv"
      BK_REBRICKABLE_API_KEY: "${BK_REBRICKABLE_API_KEY}"
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; r = requests.get('http://localhost:3333'); print(r.status_code == 200)"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    labels:
      homepage.group: "Home"
      homepage.name: "Bricktracker"
      homepage.icon: "sh-bricktracker.png"
      homepage.href: "http://10.10.1.13:3333"
      homepage.description: "Lego inventory"
      wud.watch: "true"
      wud.tag.include: '^v-\d+\.\d+\.\d+$$'
      wud.display.name: "Bricktracker"
      wud.display.icon: "sh:bricktracker"
      wud.link.template: "https://gitea.baerentsen.space/FrederikBaerentsen/BrickTracker/releases/tag/v$${major}.$${minor}.$${patch}"
    ipc: private
    networks: 
      - bricktracker
networks: 
  bricktracker:
    driver: bridge
    name: bricktracker
    external: false