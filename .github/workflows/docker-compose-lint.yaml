# .github/workflows/lint-compose.yml

name: Lint Docker Compose Files (Optimized Push/PR)

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for all branches
  push:
    branches: [ 'main' ]
  # Triggers the workflow on pull request events for all branches
  pull_request:
    branches: [ 'main' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint-docker-compose:
    name: Lint Docker Compose (Optimized Push/PR)
    # Use the latest Ubuntu runner
    runs-on: ubuntu-latest

    # Set permissions for tj-actions/changed-files (needed for PR events)
    permissions:
      pull-requests: read
      contents: read # Default permission

    steps:
      # 1. Checkout Repository Code
      # Need full history for push diff, shallow for PR is usually fine
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history for push events to compare HEAD^ against HEAD
          # For PR events, tj-actions/changed-files handles diff correctly with shallow clone
          fetch-depth: ${{ github.event_name == 'push' && 0 || 1 }}

      # 2. Get Changed Files (for push or pull_request events)
      # This action determines which files have changed compared to base/previous commit.
      - name: Get changed files
        id: changed_files
        # Only run this step for push or pull_request events
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        uses: tj-actions/changed-files@v44 # Use a specific version
        with:
          # Output changed files as space-separated strings
          separator: ' '
          # We need the list of all changed files to check against our patterns
          # This output name includes added, modified, renamed, copied files etc.
          files_output_ref: all_changed_files

      # 3. Check if relevant Compose files were changed (for push or pull_request events)
      # Determines if any changed file matches our compose patterns.
      # Sets an output 'changed' which is true/false.
      - name: Check for changed Compose files
        id: check_changes
        # Only run this step for push or pull_request events
        if: github.event_name == 'push' || github.event_name == 'pull_request'
        shell: bash # Use bash for easier string manipulation
        run: |
          changed=false
          echo "Checking for relevant changes in: ${{ steps.changed_files.outputs.all_changed_files }}"
          # Loop through space-separated list of changed files from previous step
          # Need to handle the case where the output might be empty
          changed_list="${{ steps.changed_files.outputs.all_changed_files }}"
          if [[ -n "$changed_list" ]]; then
            for file in $changed_list; do
              # Check if the filename ends with any of our patterns
              if [[ "$file" == *docker-compose.yml || \
                    "$file" == *docker-compose.yaml || \
                    "$file" == *compose.yml || \
                    "$file" == *compose.yaml ]]; then
                echo "Found relevant changed file: $file"
                changed=true
                break # Found one, no need to check further
              fi
            done
          else
            echo "No files were changed in this event."
          fi
          echo "Relevant compose files changed: $changed"
          # Set the output 'changed' to true or false as a string
          echo "changed=$changed" >> $GITHUB_OUTPUT

      # 4. Run the Docker Compose Linter Action (Conditional)
      # Runs if:
      #   a) The event is 'workflow_dispatch' (always run)
      #   b) OR The event is 'push'/'pull_request' AND relevant compose files were changed
      - name: Run Docker Compose Linter Action
        # Condition: Run always on dispatch, or only if relevant files changed on push/pr
        if: |
          github.event_name == 'workflow_dispatch' ||
          (
            (github.event_name == 'push' || github.event_name == 'pull_request') &&
            steps.check_changes.outputs.changed == 'true'
          )
        uses: sjafferali/docker-compose-lint-action@v0.1.2
        with:
          # We still need to tell the action which patterns to lint when it runs
          compose-file: |
            **/docker-compose.yml
            **/docker-compose.yaml
            **/compose.yml
            **/compose.yaml
          # Optional: Pin linter version for stability
          # linter-version: '1.2.0'

      # 5. Handle skipped step (Optional but good practice)
      # If the event was 'push' or 'pull_request' but no relevant files were changed,
      # the linter step is skipped. This step logs that.
      - name: Linting skipped (no relevant changes)
        # Condition: Only run if it was a push/pr event AND the check_changes output was 'false'
        if: |
          (github.event_name == 'push' || github.event_name == 'pull_request') &&
          steps.check_changes.outputs.changed == 'false'
        run: echo "Linting step was skipped because no relevant Docker Compose files were changed in this ${{ github.event_name }} event."
